{"version":3,"sources":["components/Footer/index.tsx","contexts/ThemeContext/index.tsx","components/NavBar/index.tsx","pages/Landing/index.tsx","pages/About/index.tsx","service/api.ts","resources/FormatDatePtBr.ts","pages/Projects/index.tsx","pages/Contact/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Footer","Container","maxWidth","Grid","container","justify","alignItems","spacing","item","Typography","ListItem","button","component","href","target","ThemeContext","createContext","ThemeProvider","children","useState","dark","setDark","fontSize","setFontSize","useEffect","localStorage","getItem","console","log","JSON","parse","Number","theme","createMuiTheme","palette","type","Provider","value","changeTheme","setItem","stringify","changeFontSize","newSize","responsiveFontSizes","Paper","square","useStyles","makeStyles","link","cursor","linkActive","color","action","disabled","NavBar","classes","useContext","anchorEl","setAnchorEl","handleClose","AppBar","position","Toolbar","Hidden","smUp","Tooltip","title","IconButton","onClick","event","currentTarget","to","spy","smooth","className","activeClass","duration","variant","xsDown","Menu","keepMounted","open","Boolean","onClose","List","ListItemIcon","ListItemText","root","height","display","background","default","Landing","name","xs","Box","mt","size","paddingTop","minHeight","paper","About","justifyContent","pb","px","paragraph","align","axios","create","formatDatePtBr","data","dataC","Date","getUTCDate","slice","getUTCMonth","getUTCFullYear","flexDirection","paddingBottom","cardContent","memo","repos","setRepos","listRepos","useCallback","a","api","get","reponse","blackList","length","map","repo","index","includes","key","sm","Card","CardHeader","CardActionArea","html_url","CardContent","description","language","CardActions","created_at","updated_at","pt","CircularProgress","width","Contact","noWrap","App","Projects","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4cabb413.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Toolbar, Grid, Typography, ListItem, Container, } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Typography>© 2020 - Leonardo Jardim Ribeiro</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <ListItem button component=\"a\" href=\"https://github.com/LeonardoJRibeiro/LeonardoJRibeiro.github.io\" target=\"_blank\">\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={1}>\r\n              <Grid item>\r\n                <GitHubIcon />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>Ver o código fonte desse página.</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </ListItem>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { ThemeProvider as ThemeProviderMUI, createMuiTheme, responsiveFontSizes, Paper } from \"@material-ui/core\";\r\n\r\ninterface ThemeContextValues {\r\n  changeTheme: () => void,\r\n  changeFontSize: (novoTamanho: number) => void,\r\n  dark: boolean,\r\n  fontSize: number,\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextValues>({} as ThemeContextValues);\r\n\r\nexport const ThemeProvider: React.FC = ({ children }) => {\r\n  const [dark, setDark] = useState<boolean>(true);\r\n  const [fontSize, setFontSize] = useState<number>(14);\r\n\r\n  const changeTheme = () => {\r\n    if (dark) {\r\n      setDark(false);\r\n      localStorage.setItem(\"dark\", JSON.stringify(false));\r\n    }\r\n    else {\r\n      setDark(true);\r\n      localStorage.setItem(\"dark\", JSON.stringify(true));\r\n    }\r\n  }\r\n\r\n  function changeFontSize(newSize: number) {\r\n    if (newSize >= 10 && newSize <= 30) {\r\n      setFontSize(newSize);\r\n      localStorage.setItem(\"fontSize\", JSON.stringify(newSize));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const dark = localStorage.getItem(\"dark\");\r\n    console.log(dark)\r\n    if (dark) {\r\n      setDark(JSON.parse(dark));\r\n    }\r\n    const fontSize = localStorage.getItem(\"fontSize\");\r\n    if (fontSize) {\r\n      setFontSize(Number(fontSize));\r\n    }\r\n  }, []);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: dark ? \"dark\" : \"light\",\r\n    },\r\n    \r\n  });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ changeTheme, changeFontSize, dark, fontSize }}>\r\n      <ThemeProviderMUI theme={responsiveFontSizes(theme)}>\r\n        <Paper square>\r\n          {children}\r\n        </Paper>\r\n      </ThemeProviderMUI>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ThemeContext;","import React, { useContext, useState } from 'react';\r\nimport { AppBar, Toolbar, Grid, Typography, makeStyles, Tooltip, IconButton, Hidden, Menu, ListItem, ListItemIcon, ListItemText, List } from '@material-ui/core';\r\nimport { Link } from 'react-scroll';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    cursor: \"pointer\",\r\n  },\r\n  linkActive: {\r\n    color: theme.palette.action.disabled\r\n  },\r\n}))\r\n\r\nconst NavBar: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { dark, changeTheme } = useContext(ThemeContext);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" color=\"inherit\">\r\n        <Toolbar>\r\n          <Grid container justify=\"space-between\" alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <Tooltip title=\"Menu\">\r\n                  <IconButton onClick={handleClick}>\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item>\r\n              <Link to=\"landing\" spy smooth=\"easeOutBounce\" className={classes.link} activeClass={classes.linkActive} duration={500} >\r\n                <Typography variant=\"h6\">Leonardo Ribeiro</Typography>\r\n              </Link>\r\n            </Grid>\r\n            <Hidden xsDown>\r\n              <Grid item>\r\n                <Grid container spacing={2}>\r\n                  <Grid item>\r\n                    <Link to=\"about\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link} >\r\n                      <Typography>Sobre mim</Typography>\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"projects\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link} >\r\n                      <Typography>Projetos</Typography>\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"contact\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link}>\r\n                      <Typography>Contato</Typography>\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title={`Alterar tema para ${dark ? \"claro\" : \"escuro\"}`}>\r\n                  <IconButton onClick={() => changeTheme()}>\r\n                    <InvertColorsIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Hidden>\r\n          </Grid>\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <List>\r\n              <Link to=\"about\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link} >\r\n                <ListItem button onClick={handleClose}>\r\n                  <ListItemIcon>\r\n                    <InfoIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography>Sobre mim</Typography>\r\n                  </ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n              <Link to=\"projects\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link} >\r\n                <ListItem onClick={handleClose}>\r\n                  <ListItemIcon>\r\n                    <CodeIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography>Projetos</Typography>\r\n                  </ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n              <Link to=\"contact\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link}>\r\n                <ListItem button onClick={handleClose}>\r\n                  <ListItemIcon>\r\n                    <ContactsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography>Contato</Typography>\r\n                  </ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n              <ListItem button onClick={() => changeTheme()}>\r\n                <ListItemIcon>\r\n                  <Tooltip title={`Alterar tema para ${dark ? \"claro\" : \"escuro\"}`}>\r\n\r\n                    <InvertColorsIcon />\r\n                  </Tooltip>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  <Typography>Alterar tema</Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { makeStyles, Typography, IconButton, Tooltip, Hidden, Box, Grid, Container, } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: `calc(100vh)`,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: theme.palette.background.default\r\n  },\r\n}))\r\nconst Landing: React.FC = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Element name=\"landing\" className={classes.root}>\r\n      <Container maxWidth=\"md\">\r\n        <Grid container >\r\n          <Hidden xsDown>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h1\">Olá!</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h3\">Meu nome é Leonardo.</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h3\">Bem vindo ao meu portfólio!</Typography>\r\n            </Grid>\r\n          </Hidden>\r\n          <Hidden smUp>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h2\">Olá!</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\">Meu nome é Leonardo.</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\">Bem vindo ao meu portfólio!</Typography>\r\n            </Grid>\r\n          </Hidden>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Box mt={3}>\r\n                <Link to=\"about\" smooth=\"easeOutBounce\" duration={500} >\r\n                  <IconButton size=\"medium\">\r\n                    <Tooltip title=\"Rolar para baixo\">\r\n                      <KeyboardArrowDownIcon fontSize=\"large\" />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                </Link>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { Element } from 'react-scroll';\r\nimport { makeStyles, Typography, Box, Container } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: \"64px\",\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: theme.palette.background.paper,\r\n  },\r\n}))\r\n\r\nconst About: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Element name=\"about\" className={classes.root}>\r\n      <Container maxWidth=\"md\">\r\n        <Box display=\"flex\" justifyContent=\"center\" pb={3}>\r\n          <Typography variant=\"h2\" >Sobre mim</Typography>\r\n        </Box>\r\n        <Box px={3}>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Se você chegou até aqui, foi porque algo em mim chamou sua atenção, certo?</Typography>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Então...</Typography>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Sempre gostei muito de tecnologias que envolvem eletrônica, elétrica, mecânica e tecnologias da informação.</Typography>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Descobri o universo da programação em meados de 2016 e somente no início de 2017, quando iniciei a faculdade, pude ter certeza que essa é a carreira que pretendo seguir.</Typography>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Atualmente curso Sistemas de Informação na Unidade de Itaberaí da Universidade Estadual de Goiás.</Typography>\r\n        </Box>\r\n      </Container>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport default About;","import axios from \"axios\";\r\nexport default axios.create();","\r\nexport default function formatDatePtBr(data: Date | string) {\r\n  if (data) {\r\n    const dataC = new Date(data)\r\n    return `${(\"0\" + dataC.getUTCDate()).slice(-2)}/${(\"0\" + (dataC.getUTCMonth() + 1)).slice(-2)}/${dataC.getUTCFullYear()}`\r\n  }\r\n  return \"\";\r\n}","import React, { useEffect, useState, useCallback, memo } from 'react';\r\nimport { makeStyles, Box, Typography, Grid, Container, Card, CardHeader, CardContent, CardActionArea, CardActions, Tooltip, CircularProgress } from '@material-ui/core';\r\nimport { Element } from 'react-scroll';\r\nimport api from \"../../service/api\";\r\nimport formatDatePtBr from \"../../resources/FormatDatePtBr\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: \"64px\",\r\n    minHeight: \"calc(100vh - 128px)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    background: theme.palette.background.default,\r\n    paddingBottom: \"64px\",\r\n  },\r\n  cardContent: {\r\n    height: \"96px\",\r\n  }\r\n}))\r\n\r\nconst Contents: React.FC = () => {\r\n  const [repos, setRepos] = useState<any[]>([]);\r\n\r\n\r\n  const listRepos = useCallback(async () => {\r\n    const reponse = await api.get(\"https://api.github.com/users/LeonardoJRibeiro/repos\");\r\n    if (reponse) {\r\n      setRepos(reponse.data as any);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    listRepos();\r\n  }, [listRepos]);\r\n\r\n  const blackList = [\"tramoia\",];\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Element name=\"projects\" >\r\n      <Box className={classes.root}>\r\n        <Container maxWidth=\"md\">\r\n          <Box display=\"flex\" justifyContent=\"center\" pb={5}>\r\n            <Typography variant=\"h2\" >Projetos</Typography>\r\n          </Box>\r\n          <Box display=\"flex\" justifyContent=\"center\" pb={5}>\r\n            <Typography variant=\"h6\" >Essa seção ainda está em construção...</Typography>\r\n          </Box>\r\n          <Grid container spacing={3} justify=\"center\">\r\n            <>\r\n              {\r\n                repos.length ? repos.map((repo, index) => {\r\n                  if (blackList.includes(repo.name)) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <Grid item key={index} xs={12} sm={6}>\r\n                      <Card>\r\n                        <CardHeader title={repo.name} />\r\n                        <Tooltip title={`Acessar ${repo.name} no Github`}>\r\n                          <CardActionArea href={repo.html_url} target=\"_blank\" >\r\n                            <CardContent className={classes.cardContent}>\r\n                              <Typography align=\"justify\">{repo.description}</Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Tooltip>\r\n                        <CardContent>\r\n                          <Typography variant=\"caption\">Linguagem: {repo.language}</Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                          <Typography variant=\"body2\">Criado em: {formatDatePtBr(repo.created_at)}</Typography>\r\n                          <Typography variant=\"body2\">Atualizado em: {formatDatePtBr(repo.updated_at)}</Typography>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Grid>\r\n                  )\r\n                })\r\n                  : (\r\n                    <Box display=\"flex\" justifyContent=\"center\" pt={6}>\r\n                      <CircularProgress variant=\"indeterminate\" />\r\n                    </Box>\r\n                  )\r\n              }\r\n            </>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport default memo(Contents);","import React from 'react';\r\nimport { makeStyles, Container, List, ListItemIcon, ListItemText, Paper, ListItem, Typography, Box, } from '@material-ui/core';\r\nimport { Element } from 'react-scroll';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: theme.palette.background.paper\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n  }\r\n}))\r\nconst Contact: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Element name=\"contact\" className={classes.root}>\r\n      <Container maxWidth=\"md\">\r\n        <Box display=\"flex\" justifyContent=\"center\" pb={8}>\r\n          <Typography variant=\"h2\">Contato</Typography>\r\n        </Box>\r\n        <Paper className={classes.paper}>\r\n          <List>\r\n            <ListItem button component=\"a\" href=\"mailto:leonardojr410@gmail.com\">\r\n              <ListItemIcon>\r\n                <MailOutlineIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <Typography noWrap>leonardojr410@gmail.com</Typography>\r\n              </ListItemText>\r\n            </ListItem>\r\n            <ListItem button component=\"a\" href=\"https://github.com/LeonardoJRibeiro\" target=\"_blank\" >\r\n              <ListItemIcon>\r\n                <GitHubIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <Typography noWrap>Github</Typography>\r\n              </ListItemText>\r\n            </ListItem>\r\n            <ListItem button component=\"a\" href=\"https://www.linkedin.com/in/leonardo-ribeiro-1671981b3/\" target=\"_blank\">\r\n              <ListItemIcon>\r\n                <LinkedInIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <Typography noWrap>LinkedIn</Typography>\r\n              </ListItemText>\r\n            </ListItem>\r\n          </List>\r\n        </Paper>\r\n      </Container>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport Footer from './components/Footer';\nimport NavBar from './components/NavBar';\nimport Landing from './pages/Landing';\nimport About from './pages/About';\nimport Projects from './pages/Projects';\nimport Contact from './pages/Contact';\nimport {ThemeProvider} from './contexts/ThemeContext'\n\nfunction App() {\n\n  return (\n    <ThemeProvider>\n      <NavBar  />\n      <Landing />\n      <About />\n      <Projects />\n      <Contact />\n      <Footer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}