{"version":3,"sources":["components/Footer/index.tsx","contexts/ThemeContext/index.tsx","components/NavBar/index.tsx","pages/Landing/index.tsx","pages/About/index.tsx","service/api.ts","resources/FormatDatePtBr.ts","pages/Projects/index.tsx","pages/Contact/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Footer","Container","maxWidth","Grid","container","justify","alignItems","spacing","item","Typography","ListItem","button","component","href","target","ThemeContext","createContext","ThemeProvider","children","useState","theme","setTheme","fontSize","setFontSize","prefersDarkTheme","useMediaQuery","useEffect","localStorage","getItem","Number","getTheme","useCallback","getNextTheme","appTheme","createMuiTheme","palette","type","Provider","value","changeTheme","newTheme","setItem","changeFontSize","newSize","JSON","stringify","responsiveFontSizes","Paper","square","useStyles","makeStyles","link","cursor","linkActive","color","action","disabled","memo","classes","useContext","anchorEl","setAnchorEl","handleClose","handleTheme","getIconTheme","getIconButtonTheme","useMemo","nexThemeName","Tooltip","title","IconButton","onClick","AppBar","position","Toolbar","Hidden","smUp","event","currentTarget","to","spy","smooth","className","activeClass","duration","variant","xsDown","Menu","keepMounted","open","Boolean","onClose","List","ListItemIcon","ListItemText","root","height","display","background","default","Landing","name","xs","Box","mt","size","paddingTop","minHeight","paper","About","justifyContent","pb","px","paragraph","align","axios","create","formatDatePtBr","data","dataC","Date","getUTCDate","slice","getUTCMonth","getUTCFullYear","flexDirection","paddingBottom","cardContent","repos","setRepos","listRepos","a","api","get","reponse","blackList","length","map","repo","index","includes","key","sm","Card","CardHeader","CardActionArea","html_url","CardContent","description","language","CardActions","created_at","updated_at","pt","CircularProgress","width","Contact","noWrap","App","Projects","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7146e888.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid, Typography, ListItem, Container, } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Typography>© 2020 - Leonardo Jardim Ribeiro</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <ListItem button component=\"a\" href=\"https://github.com/LeonardoJRibeiro/LeonardoJRibeiro.github.io\" target=\"_blank\">\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={1}>\r\n              <Grid item>\r\n                <GitHubIcon />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>Ver o código fonte desse página.</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </ListItem>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { createContext, useState, useEffect, useCallback } from \"react\";\r\nimport { ThemeProvider as ThemeProviderMUI, createMuiTheme, responsiveFontSizes, Paper, useMediaQuery } from \"@material-ui/core\";\r\n\r\ninterface Theme {\r\n  theme: \"dark\" | \"light\" | \"auto\";\r\n}\r\n\r\ninterface ThemeContextValues {\r\n  changeTheme: (newTheme: Theme['theme']) => void;\r\n  changeFontSize: (novoTamanho: number) => void;\r\n  getNextTheme: () => Theme['theme'];\r\n  theme: Theme['theme'];\r\n  fontSize: number;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextValues>({} as ThemeContextValues);\r\n\r\nexport const ThemeProvider: React.FC = ({ children }) => {\r\n  const [theme, setTheme] = useState<Theme['theme']>(\"auto\");\r\n  const [fontSize, setFontSize] = useState<number>(14);\r\n\r\n  const prefersDarkTheme = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n\r\n  const changeTheme = (newTheme: Theme['theme']) => {\r\n    localStorage.setItem(\"theme\", newTheme);\r\n    setTheme(newTheme);\r\n  }\r\n\r\n  function changeFontSize(newSize: number) {\r\n    if (newSize >= 10 && newSize <= 30) {\r\n      setFontSize(newSize);\r\n      localStorage.setItem(\"fontSize\", JSON.stringify(newSize));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const theme = localStorage.getItem(\"theme\");\r\n    if (theme) {\r\n      setTheme(theme as Theme['theme']);\r\n    }\r\n    const fontSize = localStorage.getItem(\"fontSize\");\r\n    if (fontSize) {\r\n      setFontSize(Number(fontSize));\r\n    }\r\n  }, []);\r\n\r\n  const getTheme = useCallback(() => {\r\n    switch (theme) {\r\n      case \"auto\": {\r\n        return prefersDarkTheme ? \"dark\" : \"light\";\r\n      }\r\n      case \"dark\": {\r\n        return \"dark\"\r\n      }\r\n      case \"light\": {\r\n        return \"light\"\r\n      }\r\n    }\r\n  }, [prefersDarkTheme, theme]);\r\n\r\n  const getNextTheme = useCallback((): Theme['theme'] => {\r\n    switch (theme) {\r\n      case \"auto\": {\r\n        return \"dark\"\r\n      }\r\n      case \"dark\": {\r\n        return \"light\"\r\n      }\r\n      case \"light\": {\r\n        return \"auto\"\r\n      }\r\n    }\r\n  }, [theme]);\r\n\r\n  const appTheme = createMuiTheme({\r\n    palette: {\r\n      type: getTheme(),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ changeTheme, changeFontSize, theme, fontSize, getNextTheme }}>\r\n      <ThemeProviderMUI theme={responsiveFontSizes(appTheme)}>\r\n        <Paper square>\r\n          {children}\r\n        </Paper>\r\n      </ThemeProviderMUI>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ThemeContext;","import React, { memo, useCallback, useContext, useMemo, useState } from 'react';\r\nimport { AppBar, Toolbar, Grid, Typography, makeStyles, Tooltip, IconButton, Hidden, Menu, ListItem, ListItemIcon, ListItemText, List } from '@material-ui/core';\r\nimport { Link } from 'react-scroll';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\nimport BrightnessAutoIcon from '@material-ui/icons/BrightnessAuto';\r\nimport BrightnessLowIcon from '@material-ui/icons/BrightnessLow';\r\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    cursor: \"pointer\",\r\n  },\r\n  linkActive: {\r\n    color: theme.palette.action.disabled\r\n  },\r\n}))\r\n\r\nconst NavBar: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { theme, changeTheme, getNextTheme } = useContext(ThemeContext);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleTheme = useCallback(() => {\r\n    changeTheme(getNextTheme());\r\n  }, [changeTheme, getNextTheme]);\r\n\r\n  const getIconTheme = useCallback(() => {\r\n    switch (theme) {\r\n      case \"auto\": {\r\n        return <BrightnessAutoIcon />\r\n      }\r\n      case \"dark\": {\r\n        return <BrightnessLowIcon />\r\n      }\r\n      case \"light\": {\r\n        return <BrightnessHighIcon />\r\n      }\r\n    }\r\n  }, [theme]);\r\n\r\n  const getIconButtonTheme = useMemo(() => {\r\n    const nexTheme = getNextTheme();\r\n    let nexThemeName = \"\";\r\n    switch (nexTheme) {\r\n      case \"auto\": {\r\n        nexThemeName = \"automático\";\r\n        break;\r\n      }\r\n      case \"dark\": {\r\n        nexThemeName = \"escuro\";\r\n        break;\r\n      }\r\n      case \"light\": {\r\n        nexThemeName = \"claro\";\r\n        break;\r\n      }\r\n    }\r\n    return (\r\n      <Tooltip title={`Alterar tema para ${nexThemeName}`}>\r\n        <IconButton onClick={handleTheme}>\r\n          {\r\n            getIconTheme()\r\n          }\r\n        </IconButton>\r\n      </Tooltip>\r\n    )\r\n  }, [getIconTheme, getNextTheme, handleTheme]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" color=\"inherit\">\r\n        <Toolbar>\r\n          <Grid container justify=\"space-between\" alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <Tooltip title=\"Menu\">\r\n                  <IconButton onClick={handleClick}>\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item>\r\n              <Link to=\"landing\" spy smooth=\"easeOutBounce\" className={classes.link} activeClass={classes.linkActive} duration={500} >\r\n                <Typography variant=\"h6\">Leonardo Ribeiro</Typography>\r\n              </Link>\r\n            </Grid>\r\n            <Hidden xsDown>\r\n              <Grid item>\r\n                <Grid container spacing={2}>\r\n                  <Grid item>\r\n                    <Link to=\"about\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link} >\r\n                      <Typography>Sobre mim</Typography>\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"projects\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link} >\r\n                      <Typography>Projetos</Typography>\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"contact\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link}>\r\n                      <Typography>Contato</Typography>\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                {getIconButtonTheme}\r\n              </Grid>\r\n            </Hidden>\r\n          </Grid>\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <List>\r\n              <Link to=\"about\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link} >\r\n                <ListItem button onClick={handleClose}>\r\n                  <ListItemIcon>\r\n                    <InfoIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography>Sobre mim</Typography>\r\n                  </ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n              <Link to=\"projects\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link} >\r\n                <ListItem onClick={handleClose}>\r\n                  <ListItemIcon>\r\n                    <CodeIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography>Projetos</Typography>\r\n                  </ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n              <Link to=\"contact\" smooth=\"easeOutBounce\" duration={500} spy activeClass={classes.linkActive} className={classes.link}>\r\n                <ListItem button onClick={handleClose}>\r\n                  <ListItemIcon>\r\n                    <ContactsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography>Contato</Typography>\r\n                  </ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n              <ListItem button onClick={handleTheme}>\r\n                <ListItemIcon>\r\n                  {getIconButtonTheme}\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  <Typography>Alterar tema</Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(NavBar);","import React from 'react';\r\nimport { makeStyles, Typography, IconButton, Tooltip, Hidden, Box, Grid, Container, } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: `calc(100vh)`,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: theme.palette.background.default\r\n  },\r\n}))\r\nconst Landing: React.FC = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Element name=\"landing\" className={classes.root}>\r\n      <Container maxWidth=\"md\">\r\n        <Grid container >\r\n          <Hidden xsDown>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h1\">Olá!</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h3\">Meu nome é Leonardo.</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h3\">Bem vindo ao meu portfólio!</Typography>\r\n            </Grid>\r\n          </Hidden>\r\n          <Hidden smUp>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h2\">Olá!</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\">Meu nome é Leonardo.</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\">Bem vindo ao meu portfólio!</Typography>\r\n            </Grid>\r\n          </Hidden>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Box mt={3}>\r\n                <Link to=\"about\" smooth=\"easeOutBounce\" duration={500} >\r\n                  <IconButton size=\"medium\">\r\n                    <Tooltip title=\"Rolar para baixo\">\r\n                      <KeyboardArrowDownIcon fontSize=\"large\" />\r\n                    </Tooltip>\r\n                  </IconButton>\r\n                </Link>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { Element } from 'react-scroll';\r\nimport { makeStyles, Typography, Box, Container } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: \"64px\",\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: theme.palette.background.paper,\r\n  },\r\n}))\r\n\r\nconst About: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Element name=\"about\" className={classes.root}>\r\n      <Container maxWidth=\"md\">\r\n        <Box display=\"flex\" justifyContent=\"center\" pb={3}>\r\n          <Typography variant=\"h2\" >Sobre mim</Typography>\r\n        </Box>\r\n        <Box px={3}>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Se você chegou até aqui, foi porque algo em mim chamou sua atenção, certo?</Typography>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Então...</Typography>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Sempre gostei muito de tecnologias que envolvem eletrônica, elétrica, mecânica e tecnologias da informação.</Typography>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Descobri o universo da programação em meados de 2016 e somente no início de 2017, quando iniciei a faculdade, pude ter certeza que essa é a carreira que pretendo seguir.</Typography>\r\n          <Typography variant=\"h5\" paragraph align=\"justify\">Atualmente curso Sistemas de Informação na Unidade de Itaberaí da Universidade Estadual de Goiás.</Typography>\r\n        </Box>\r\n      </Container>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport default About;","import axios from \"axios\";\r\nexport default axios.create();","\r\nexport default function formatDatePtBr(data: Date | string) {\r\n  if (data) {\r\n    const dataC = new Date(data)\r\n    return `${(\"0\" + dataC.getUTCDate()).slice(-2)}/${(\"0\" + (dataC.getUTCMonth() + 1)).slice(-2)}/${dataC.getUTCFullYear()}`\r\n  }\r\n  return \"\";\r\n}","import React, { useEffect, useState, useCallback, memo } from 'react';\r\nimport { makeStyles, Box, Typography, Grid, Container, Card, CardHeader, CardContent, CardActionArea, CardActions, Tooltip, CircularProgress } from '@material-ui/core';\r\nimport { Element } from 'react-scroll';\r\nimport api from \"../../service/api\";\r\nimport formatDatePtBr from \"../../resources/FormatDatePtBr\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: \"64px\",\r\n    minHeight: \"calc(100vh - 128px)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    background: theme.palette.background.default,\r\n    paddingBottom: \"64px\",\r\n  },\r\n  cardContent: {\r\n    height: \"96px\",\r\n  }\r\n}))\r\n\r\nconst Contents: React.FC = () => {\r\n  const [repos, setRepos] = useState<any[]>([]);\r\n\r\n\r\n  const listRepos = useCallback(async () => {\r\n    const reponse = await api.get(\"https://api.github.com/users/LeonardoJRibeiro/repos\");\r\n    if (reponse) {\r\n      setRepos(reponse.data as any);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    listRepos();\r\n  }, [listRepos]);\r\n\r\n  const blackList = [\"tramoia\",];\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Element name=\"projects\" >\r\n      <Box className={classes.root}>\r\n        <Container maxWidth=\"md\">\r\n          <Box display=\"flex\" justifyContent=\"center\" pb={5}>\r\n            <Typography variant=\"h2\" >Projetos</Typography>\r\n          </Box>\r\n          <Box display=\"flex\" justifyContent=\"center\" pb={5}>\r\n            <Typography variant=\"h6\" >Essa seção ainda está em construção...</Typography>\r\n          </Box>\r\n          <Grid container spacing={3} justify=\"center\">\r\n            <>\r\n              {\r\n                repos.length ? repos.map((repo, index) => {\r\n                  if (blackList.includes(repo.name)) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <Grid item key={index} xs={12} sm={6}>\r\n                      <Card>\r\n                        <CardHeader title={repo.name} />\r\n                        <Tooltip title={`Acessar ${repo.name} no Github`}>\r\n                          <CardActionArea href={repo.html_url} target=\"_blank\" >\r\n                            <CardContent className={classes.cardContent}>\r\n                              <Typography align=\"justify\">{repo.description}</Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Tooltip>\r\n                        <CardContent>\r\n                          <Typography variant=\"caption\">Linguagem: {repo.language}</Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                          <Typography variant=\"body2\">Criado em: {formatDatePtBr(repo.created_at)}</Typography>\r\n                          <Typography variant=\"body2\">Atualizado em: {formatDatePtBr(repo.updated_at)}</Typography>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Grid>\r\n                  )\r\n                })\r\n                  : (\r\n                    <Box display=\"flex\" justifyContent=\"center\" pt={6}>\r\n                      <CircularProgress variant=\"indeterminate\" />\r\n                    </Box>\r\n                  )\r\n              }\r\n            </>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport default memo(Contents);","import React from 'react';\r\nimport { makeStyles, Container, List, ListItemIcon, ListItemText, Paper, ListItem, Typography, Box, } from '@material-ui/core';\r\nimport { Element } from 'react-scroll';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: theme.palette.background.paper\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n  }\r\n}))\r\nconst Contact: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Element name=\"contact\" className={classes.root}>\r\n      <Container maxWidth=\"md\">\r\n        <Box display=\"flex\" justifyContent=\"center\" pb={8}>\r\n          <Typography variant=\"h2\">Contato</Typography>\r\n        </Box>\r\n        <Paper className={classes.paper}>\r\n          <List>\r\n            <ListItem button component=\"a\" href=\"mailto:leonardojr410@gmail.com\">\r\n              <ListItemIcon>\r\n                <MailOutlineIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <Typography noWrap>leonardojr410@gmail.com</Typography>\r\n              </ListItemText>\r\n            </ListItem>\r\n            <ListItem button component=\"a\" href=\"https://github.com/LeonardoJRibeiro\" target=\"_blank\" >\r\n              <ListItemIcon>\r\n                <GitHubIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <Typography noWrap>Github</Typography>\r\n              </ListItemText>\r\n            </ListItem>\r\n            <ListItem button component=\"a\" href=\"https://www.linkedin.com/in/leonardo-ribeiro-1671981b3/\" target=\"_blank\">\r\n              <ListItemIcon>\r\n                <LinkedInIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                <Typography noWrap>LinkedIn</Typography>\r\n              </ListItemText>\r\n            </ListItem>\r\n          </List>\r\n        </Paper>\r\n      </Container>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport Footer from './components/Footer';\nimport NavBar from './components/NavBar';\nimport Landing from './pages/Landing';\nimport About from './pages/About';\nimport Projects from './pages/Projects';\nimport Contact from './pages/Contact';\nimport {ThemeProvider} from './contexts/ThemeContext'\n\nfunction App() {\n\n  return (\n    <ThemeProvider>\n      <NavBar  />\n      <Landing />\n      <About />\n      <Projects />\n      <Contact />\n      <Footer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}